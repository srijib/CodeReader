package com.wkswind.codereader.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.wkswind.codereader.database.DocType;
import com.wkswind.codereader.database.Result;
import com.wkswind.codereader.database.History;

import com.wkswind.codereader.database.DocTypeDao;
import com.wkswind.codereader.database.ResultDao;
import com.wkswind.codereader.database.HistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig docTypeDaoConfig;
    private final DaoConfig resultDaoConfig;
    private final DaoConfig historyDaoConfig;

    private final DocTypeDao docTypeDao;
    private final ResultDao resultDao;
    private final HistoryDao historyDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        docTypeDaoConfig = daoConfigMap.get(DocTypeDao.class).clone();
        docTypeDaoConfig.initIdentityScope(type);

        resultDaoConfig = daoConfigMap.get(ResultDao.class).clone();
        resultDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        docTypeDao = new DocTypeDao(docTypeDaoConfig, this);
        resultDao = new ResultDao(resultDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);

        registerDao(DocType.class, docTypeDao);
        registerDao(Result.class, resultDao);
        registerDao(History.class, historyDao);
    }
    
    public void clear() {
        docTypeDaoConfig.getIdentityScope().clear();
        resultDaoConfig.getIdentityScope().clear();
        historyDaoConfig.getIdentityScope().clear();
    }

    public DocTypeDao getDocTypeDao() {
        return docTypeDao;
    }

    public ResultDao getResultDao() {
        return resultDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

}
